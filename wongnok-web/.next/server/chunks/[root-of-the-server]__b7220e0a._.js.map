{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/api/auth/keycloak/logout/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\r\nimport { getToken } from 'next-auth/jwt'\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const token: any = await getToken({ req: request })\r\n  const origin = request.nextUrl.origin\r\n  // Prefer explicit /auth/signed-out page to ensure NextAuth clears client session\r\n  const envRedirect = process.env.KEYCLOAK_POST_LOGOUT_REDIRECT_URI\r\n  let configuredRedirect = envRedirect || `${origin}/auth/signed-out`\r\n  try {\r\n    const u = new URL(configuredRedirect)\r\n    // If env only provided origin or root path, normalize to signed-out page on current origin\r\n    if (u.pathname === '' || u.pathname === '/') {\r\n      configuredRedirect = `${origin}/auth/signed-out`\r\n    }\r\n  } catch {\r\n    // Fallback to signed-out if env var is not a valid URL\r\n    configuredRedirect = `${origin}/auth/signed-out`\r\n  }\r\n    const issuer = process.env.KEYCLOAK_ISSUER\r\n    if (!issuer) {\r\n      return NextResponse.json({ error: 'KEYCLOAK_ISSUER not configured' }, { status: 500 })\r\n    }\r\n\r\n  const params = new URLSearchParams()\r\n  params.set('post_logout_redirect_uri', configuredRedirect)\r\n    if (token?.idToken) params.set('id_token_hint', String(token.idToken))\r\n    if (process.env.KEYCLOAK_CLIENT_ID) params.set('client_id', process.env.KEYCLOAK_CLIENT_ID)\r\n\r\n    const logoutUrl = `${issuer}/protocol/openid-connect/logout?${params.toString()}`\r\n    return NextResponse.redirect(logoutUrl, { status: 302 })\r\n  } catch (e) {\r\n    return NextResponse.json({ error: 'Logout failed' }, { status: 500 })\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,QAAa,MAAM,CAAA,GAAA,8IAAA,CAAA,WAAQ,AAAD,EAAE;YAAE,KAAK;QAAQ;QACnD,MAAM,SAAS,QAAQ,OAAO,CAAC,MAAM;QACrC,iFAAiF;QACjF,MAAM,cAAc,QAAQ,GAAG,CAAC,iCAAiC;QACjE,IAAI,qBAAqB,eAAe,GAAG,OAAO,gBAAgB,CAAC;QACnE,IAAI;YACF,MAAM,IAAI,IAAI,IAAI;YAClB,2FAA2F;YAC3F,IAAI,EAAE,QAAQ,KAAK,MAAM,EAAE,QAAQ,KAAK,KAAK;gBAC3C,qBAAqB,GAAG,OAAO,gBAAgB,CAAC;YAClD;QACF,EAAE,OAAM;YACN,uDAAuD;YACvD,qBAAqB,GAAG,OAAO,gBAAgB,CAAC;QAClD;QACE,MAAM,SAAS,QAAQ,GAAG,CAAC,eAAe;QAC1C,IAAI,CAAC,QAAQ;YACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAiC,GAAG;gBAAE,QAAQ;YAAI;QACtF;QAEF,MAAM,SAAS,IAAI;QACnB,OAAO,GAAG,CAAC,4BAA4B;QACrC,IAAI,OAAO,SAAS,OAAO,GAAG,CAAC,iBAAiB,OAAO,MAAM,OAAO;QACpE,IAAI,QAAQ,GAAG,CAAC,kBAAkB,EAAE,OAAO,GAAG,CAAC,aAAa,QAAQ,GAAG,CAAC,kBAAkB;QAE1F,MAAM,YAAY,GAAG,OAAO,gCAAgC,EAAE,OAAO,QAAQ,IAAI;QACjF,OAAO,gIAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,WAAW;YAAE,QAAQ;QAAI;IACxD,EAAE,OAAO,GAAG;QACV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAgB,GAAG;YAAE,QAAQ;QAAI;IACrE;AACF","debugId":null}}]
}