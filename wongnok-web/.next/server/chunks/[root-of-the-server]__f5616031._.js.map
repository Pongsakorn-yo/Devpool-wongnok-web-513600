{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import axios from 'axios'\nimport NextAuth from 'next-auth'\nimport KeycloakProvider from 'next-auth/providers/keycloak'\n\n// อธิบายสั้น ๆ: \n// - ใช้ Keycloak เป็น OIDC Provider\n// - ฝั่ง discovery (issuer/authorization) ใช้ localhost:8080 ให้เบราว์เซอร์เข้าถึงได้\n//   แต่ endpoint server-to-server (token/userinfo) ชี้ไปที่ชื่อบริการใน Docker (keycloak:8080)\n// - เก็บ accessToken + idToken ไว้ใน JWT เพื่อนำไปยิง Backend ได้สะดวก\nconst handler = NextAuth({\n  providers: [\n    KeycloakProvider({\n      clientId: process.env.KEYCLOAK_CLIENT_ID ?? '',\n      clientSecret: process.env.KEYCLOAK_CLIENT_SECRET ?? '',\n  // Use localhost:8080 for discovery so the browser gets host-reachable endpoints,\n  // but override server-to-server endpoints to Docker-internal service names.\n  issuer: `http://localhost:8080/realms/Devpool_project`,\n      authorization: {\n        url: `http://localhost:8080/realms/Devpool_project/protocol/openid-connect/auth`,\n      },\n      token: `http://keycloak:8080/realms/Devpool_project/protocol/openid-connect/token`,\n      userinfo: `http://keycloak:8080/realms/Devpool_project/protocol/openid-connect/userinfo`,\n    }),\n  ],\n  \n  session: {\n    strategy: 'jwt',\n    maxAge: 24 * 60 * 60, // 24 hours\n  },\n\n  pages: {\n    signIn: '/auth/signin',\n    error: '/auth/error',\n  },\n\n  callbacks: {\n    // for keep jwt token\n  // เมื่อ login สำเร็จ จะถูกเรียกเพื่อนำ token ต่าง ๆ ใส่ลงใน JWT\n  async jwt({ token, account }) {\n      if (account) {\n        token.accessToken = account.access_token\n        // Prefer ID token for backend verification (OIDC ID token expected by Go verifier)\n        // Not all providers always return id_token; Keycloak does by default in OIDC flows.\n        // Keep both for flexibility.\n        token.idToken = (account as any).id_token\n        token.refreshToken = (account as any).refresh_token\n        token.userId = account.providerAccountId\n\n  // เรียก API เพิ่ม/อัปเดต user หลัง login สำเร็จ (idempotent)\n  try {\n          await axios.post(\n            `${process.env.INTERNAL_API_BASE}/api/v1/users/`, {},\n            {\n              headers: {\n                // Use ID token for backend which verifies ID tokens (fallback to access token)\n                Authorization: `Bearer ${(((account as any).id_token) || account.access_token)}`,\n                'Content-Type': 'application/json',\n              },\n            }\n          )\n        } catch (err) {\n          console.error('Create user error:', err)\n        }\n      }\n      return token\n    },\n\n    // ดึงข้อมูล session จาก JWT เพื่อให้ฝั่ง client ใช้งานได้ (accessToken/idToken/userId)\n  async session({ session, token }: { session: any; token: any }) {\n      if (token) {\n        session.accessToken = token.accessToken\n    session.idToken = (token as any).idToken\n        session.userId = token.userId\n\n  // เติมข้อมูลโปรไฟล์ผู้ใช้ (เช่น nickname, imageUrl) ให้ session เพื่อแสดงผล UI\n        try {\n          const base = process.env.INTERNAL_API_BASE || 'http://go-wongnok:8080'\n          const resp = await axios.get(`${base}/api/v1/users/`, {\n            headers: {\n              Authorization: `Bearer ${((token as any).idToken) || token.accessToken}`,\n            },\n          })\n          const me = resp.data as { nickName?: string; imageUrl?: string }\n          session.user = session.user || {}\n          if (me?.nickName) (session.user as any).nickName = me.nickName\n          if (me?.imageUrl) (session.user as any).imageUrl = me.imageUrl\n        } catch (e) {\n          console.warn('Unable to enrich session with user profile:', e)\n        }\n      }\n      return session\n    },\n\n  // กำหนด redirect URL หลังจาก login สำเร็จ (กัน loop ชั่วคราวด้วยการส่งกลับ home)\n  async redirect({ url, baseUrl }: { url: string; baseUrl: string }) {\n      // Temporary: Always redirect to home to avoid loops\n      return baseUrl\n    },\n  },\n  secret: process.env.NEXTAUTH_SECRET,\n  debug: true,\n})\n\nexport { handler as GET, handler as POST }\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEA,iBAAiB;AACjB,oCAAoC;AACpC,sFAAsF;AACtF,+FAA+F;AAC/F,uEAAuE;AACvE,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE;IACvB,WAAW;QACT,CAAA,GAAA,uJAAA,CAAA,UAAgB,AAAD,EAAE;YACf,UAAU,QAAQ,GAAG,CAAC,kBAAkB,IAAI;YAC5C,cAAc,QAAQ,GAAG,CAAC,sBAAsB,IAAI;YACxD,iFAAiF;YACjF,4EAA4E;YAC5E,QAAQ,CAAC,4CAA4C,CAAC;YAClD,eAAe;gBACb,KAAK,CAAC,yEAAyE,CAAC;YAClF;YACA,OAAO,CAAC,yEAAyE,CAAC;YAClF,UAAU,CAAC,4EAA4E,CAAC;QAC1F;KACD;IAED,SAAS;QACP,UAAU;QACV,QAAQ,KAAK,KAAK;IACpB;IAEA,OAAO;QACL,QAAQ;QACR,OAAO;IACT;IAEA,WAAW;QACT,qBAAqB;QACvB,gEAAgE;QAChE,MAAM,KAAI,EAAE,KAAK,EAAE,OAAO,EAAE;YACxB,IAAI,SAAS;gBACX,MAAM,WAAW,GAAG,QAAQ,YAAY;gBACxC,mFAAmF;gBACnF,oFAAoF;gBACpF,6BAA6B;gBAC7B,MAAM,OAAO,GAAG,AAAC,QAAgB,QAAQ;gBACzC,MAAM,YAAY,GAAG,AAAC,QAAgB,aAAa;gBACnD,MAAM,MAAM,GAAG,QAAQ,iBAAiB;gBAE9C,6DAA6D;gBAC7D,IAAI;oBACI,MAAM,uIAAA,CAAA,UAAK,CAAC,IAAI,CACd,GAAG,QAAQ,GAAG,CAAC,iBAAiB,CAAC,cAAc,CAAC,EAAE,CAAC,GACnD;wBACE,SAAS;4BACP,+EAA+E;4BAC/E,eAAe,CAAC,OAAO,EAAG,AAAC,AAAC,QAAgB,QAAQ,IAAK,QAAQ,YAAY,EAAG;4BAChF,gBAAgB;wBAClB;oBACF;gBAEJ,EAAE,OAAO,KAAK;oBACZ,QAAQ,KAAK,CAAC,sBAAsB;gBACtC;YACF;YACA,OAAO;QACT;QAEA,uFAAuF;QACzF,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAgC;YAC1D,IAAI,OAAO;gBACT,QAAQ,WAAW,GAAG,MAAM,WAAW;gBAC3C,QAAQ,OAAO,GAAG,AAAC,MAAc,OAAO;gBACpC,QAAQ,MAAM,GAAG,MAAM,MAAM;gBAEnC,+EAA+E;gBACzE,IAAI;oBACF,MAAM,OAAO,QAAQ,GAAG,CAAC,iBAAiB,IAAI;oBAC9C,MAAM,OAAO,MAAM,uIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,KAAK,cAAc,CAAC,EAAE;wBACpD,SAAS;4BACP,eAAe,CAAC,OAAO,EAAE,AAAC,AAAC,MAAc,OAAO,IAAK,MAAM,WAAW,EAAE;wBAC1E;oBACF;oBACA,MAAM,KAAK,KAAK,IAAI;oBACpB,QAAQ,IAAI,GAAG,QAAQ,IAAI,IAAI,CAAC;oBAChC,IAAI,IAAI,UAAU,AAAC,QAAQ,IAAI,CAAS,QAAQ,GAAG,GAAG,QAAQ;oBAC9D,IAAI,IAAI,UAAU,AAAC,QAAQ,IAAI,CAAS,QAAQ,GAAG,GAAG,QAAQ;gBAChE,EAAE,OAAO,GAAG;oBACV,QAAQ,IAAI,CAAC,+CAA+C;gBAC9D;YACF;YACA,OAAO;QACT;QAEF,iFAAiF;QACjF,MAAM,UAAS,EAAE,GAAG,EAAE,OAAO,EAAoC;YAC7D,oDAAoD;YACpD,OAAO;QACT;IACF;IACA,QAAQ,QAAQ,GAAG,CAAC,eAAe;IACnC,OAAO;AACT","debugId":null}}]
}